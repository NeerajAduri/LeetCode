class Solution {
    int count=0;
    Queue q = new LinkedList<>();
    public boolean canVisitAllRooms(List<List<Integer>> rooms) {
        int[] visited = new int[rooms.size()];
        dfs(rooms,visited,0);
        if(count==rooms.size()){return true;}
        return false;
    }
    public void dfs(List<List<Integer>> rooms,int[] visited,int index){
        visited[index] = 1;
        count++;
        for(int i=0;i<rooms.get(index).size();i++){
            if(visited[rooms.get(index).get(i)]==0){
                q.add(rooms.get(index).get(i));
                visited[rooms.get(index).get(i)]=-1;
            }
        }
        while(q.size()>0){
            dfs(rooms,visited,(int)q.poll());
        }
        return ;
    }
    
}
