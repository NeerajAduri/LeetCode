/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {

    
    List<List<Integer>> res = new ArrayList<>();
    
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        
         List<Integer> ds = new ArrayList<Integer>();
         res = trav(root,sum,ds);
         
         return res;
    }
    
    public List<List<Integer>> trav(TreeNode root, int sum, List<Integer> adder){
        if(root==null){return res;}
       
        if(root.left==null && root.right == null) {
            int summer = root.val;
            for(int i=0;i<adder.size();i++){
                summer+= adder.get(i);
            }

            if (sum == summer){
                adder.add(root.val);

                List <Integer> appender = new ArrayList<>(adder);
                res.add(appender);
            
                adder.remove(adder.size() - 1);
            }
            return res;
        }
        
        adder.add(root.val);
        
        trav(root.left,sum,adder);
        
        trav(root.right,sum,adder);
        adder.remove(adder.size() - 1);
        
        return res;
    }
    
    
}
