/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {

        ListNode res = new ListNode(-100);
        ListNode head = res;
        int carry =0;
        int addi=0;
        while(l1 !=null && l2  != null){
            
             addi =  l1.val + l2.val + carry; 
            if(addi >=10){
                carry = 1;
                addi = addi % 10;
            }
            else{
                carry=0;
            }
            
            ListNode new1 = new ListNode(addi);
            if(res==null) 
            {res = new1;}
            else{
            res.next = new1;}
            res= res.next;     
            l1=l1.next; l2=l2.next;
        }
        
        while(l1  != null){
              addi =  l1.val  + carry; 
            if(addi >=10){
                carry = 1;
                addi = addi % 10;
            }
            else{
                carry=0;
            }
            
            ListNode new1 = new ListNode(addi);
            if(res==null) 
            {res = new1;}
            else{
            res.next = new1;}
            res= res.next;     
            
            l1=l1.next; 
            
        }
        
        while(l2  != null){
              addi =  l2.val  + carry; 
            if(addi >=10){
                carry = 1;
                addi = addi % 10;
            }
            else{
                carry=0;
            }
            
           ListNode new1 = new ListNode(addi);
            if(res==null) 
            {res = new1;}
            else{
            res.next = new1;}
            res= res.next;
            l2=l2.next;
        }
        if(carry!=0){
            ListNode new1 = new ListNode(carry);
            if(res==null) 
            {res = new1;}
            else{
            res.next = new1;}
            res= res.next;
        }
        return head.next;
    }
}
