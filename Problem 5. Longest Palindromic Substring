class Solution {
    public String longestPalindrome(String s) {
        if(s.length()==0 || s.length()==1){return s;}
        
        int maxHeight=1;
        StringBuffer sb=new StringBuffer();
        for(int j=0;j<s.length();j++){
            for(int i=0;i<=s.length()-maxHeight-j;i++){
                //System.out.println(s.substring(j,i+maxHeight+j));
                if(isPalindrome(s.substring(j,j+maxHeight+i)))
                {
                    
                    sb=new StringBuffer(s.substring(j,i+maxHeight+j));
                    j--;
                    maxHeight++;
                    break;
                }

            }
        }
        return sb.toString();
        
    }
    
    public boolean isPalindrome(String s){
        int i=0,j=s.length()-1;
        for(;i<=j;i++,j--){
            if(s.charAt(i)!=s.charAt(j)){return false;}
        }
        return true;  
    }
}
